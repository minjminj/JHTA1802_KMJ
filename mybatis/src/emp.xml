<?xml version="1.0" encoding="UTF-8"?>
<!-- 데이터 베이스를 연결하기 위한 기본 정보를 제공 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="emp">
	<!-- 여러 작업을 하나의 이름으로 수행하기 위해 namesapce를 지정하며, 각각의 작업은 고유한 id를 가지고 있어야 한다 -->
	<select id="select" parameterType="int" resultType="bean.EmpVo">
		select employee_id, first_name, phone_number, salary
		from   employees
		where  employee_id = #{_parameter}
							<!-- request영역으로부터 parameterType을 통해 전달되어 들어오는 parameter  -->
	</select>
		<!-- parameterType이 #{id}와 만나 employee_id로 데이터 비교, select.
			그 결과를 resultType인 EmpVo에 반환하는데, 이때 컬럼명과 같은 setter가 실행됨. -->
		<!-- #{}는 ''를 포함, ${}는 '' 미포함 -->
	
	<select id="select2" parameterType="String" resultType="bean.EmpVo">
		select employee_id, first_name, phone_number, salary
		from   employees
		where  first_name like '%'||#{findStr}||'%' or phone_number like '%'||#{findStr}||'%'
	</select>
	
	<select id="select_hire" parameterType="String" resultType="bean.EmpVo">
		select employee_id, first_name, phone_number, to_char(hire_date, 'yyyy-mm-dd') hire_date
		from   employees
		where  to_char(hire_date,'yyyy') = #{_parameter}
	</select>
	
	
	<!-- 동적 if -->
	<select id="select_if" parameterType="String" resultType="bean.EmpVo">
		select employee_id, first_name, phone_number, to_char(hire_date, 'yyyy-mm-dd') hire_date
		from employees
		<if test='_parameter != null'>
			where to_char(hire_date, 'mm') like '%${_parameter}%'
		</if>
	</select>
	
	<select id="select_where" parameterType="bean.EmpVo" resultType="bean.EmpVo">
		select employee_id, first_name, phone_number, to_char(hire_date, 'yyyy-mm-dd') hire_date
		from employees
		<where>
			<if test='first_name != null'>
				first_name like '%${first_name}%'
			</if>
			<if test='hire_date != null'>
				and to_char(hire_date, 'yyyy') like '%${hire_date}%'
			</if>
		</where>
	</select>
	
	<select id="dept_list" resultType="bean.DepartmentVo">
		select department_id, department_name
		from departments
		order by department_name
	</select>
	
	<select id="select_foreach" parameterType="java.util.List" resultType="bean.EmpVo">
		select *
		from employees
		<where>
			department_id in <!-- in안에 항목들으 모두 or연산자로 연결된 상태임 -->
			<foreach collection="list" index="index" item="data" open="(" close=")" separator=",">
				#{data}
			</foreach>
		</where>
		order by first_name
	</select>
</mapper>